notation: a,b = sequential; a-b - rock, a+b - roll

idea 1 (basics):

  r s             e i
a ↓ ↑ t         n ← → o
         ⇧   ␣

idea 2 (leftnav, righteye):

  r s             e i
a ↓ ↑ t         n ◉ ◎ o
←     →  ⇧   ␣

idea 3 (bs-enter):

   r s             e i
 a ↓ ↑ t         n ← → o
⌫      ◎  ⇧   ␣  ◉     ↵


curved home row
⇧ is both a hold-mod (for stay-in-layer stuff) and a tap-shift
␣ is both a hold-mod (for stay-in-layer stuff) and a tap-space
home row and space are modifiers themselves and only output on release
rolls roll though, only rocks (back-and-forth) form new combos
same-key rocks are preferred
arrows aren't modifiers and have key repeat


--- let's focus on the basics one first ---

  r s             e i        more compact
a ↓ ↑ t         n ← → o    --------------->  a r s t      n e i o
         ⇧   ␣                                 ↓ ↑   ⇧  ␣   ← →


⇧,⇧ is ??? (window focus toggle? workspace toggle? one-handed mode? eyetracker clicking? caps lock? shift lock? reserved for future use?)
⇧-␣ is enter, ⇧+␣ is (underscore is wasteful @ 0.23%)
␣-⇧ is backspace, needs key repeat

⇧-←, ⇧-→ are move-by-word, needs key repeat
⇧+←, ⇧+→ are ???
⇧-↓, ⇧-↑ are ???
⇧+↓, ⇧+↑ are home-end
␣-↓, ␣-↑ are page up / page down, need key repeat
␣-←, ␣-→ rocks are ???  (eat-word and tab?)

freq        6  5-4 3.8 3.5 2.8 2.4 2 - 1.7 1.6 1.5 1.2    1   .9 .8
76%  6-0.8: ␣ ↵ ↑↓ e⌫  itw osn ar  ←c→d⤒⤓: lp  gu  ⎋ h ⌦  xym -  b
            ^  ^^^ ^^  ^^^ ^^^ ^^  ^^^^^^  ^    ^    ^ ^
84% .7-.5: v f ③ ② / 🅆 S q 🄰 ↹ .
94% .4-.2: A k ⤓ C 🅄 E ' L 0 T 🄲 z 🅁 , ⤒ 1 V I D W
98% .2-.09: ⬰  ⇴ _ P O 2 R M * ` 🅅 N " 3 🄵 🅃 F 9 # G 🄱 = H U 🄽 5 )

       normal                 tap-shifted
 a  r  s  t         n  e  i  o  |  A  R  S  T         N  E  I  O
    ↓  ↑     ⇧   ␣     ←  →     |     ⤒  ⤓     ⇧   ⎈     ·  ·

 ☰ al  q  x         · Qu  ·  ·  |  ☰ Al  Q  ·         · Qu  ·  ·
    ·  ·     ·   ·     <  >     |     ·  ·     ·   ·     <  >

 v  ☰  p  g         ·  ·  ·  ·  |  V  ☰  P  G         ·  ·  ·  ·
   l/w ·     ·   ·     [  ]     |    L/W ·     ·   ·     ·  ·

 f  m  ☰  d         ·  ·  · co  |  F  M  ☰  D         ·  ·  · Co
    · c/z    ·   ·     (  )     |     · C/Z    ·   ·     ·  ·

 ↹  k  b  ☰        th the ·  ·  |  ·  K  B  ☰        Th The ·  ·
    ·  ·     ·   ·     {  }     |     ·  ·     ·   ·     ·  ·

ha  ·  · nd␣        ☰ he  ·  ·  | Ha  ·  · nd         ☰ He  ·  ·
    ·  ·     ·   ·     ·  ·     |     ·  ·     ·   ·     ·  ·

 · el  · ed␣        h  ☰  .  '  |  · El  · ed         H  ☰  ·  "
    ·  ·     ·   ·    u/, ·     |     ·  ·     ·   ·    U/· ·

 ·  ·  ·  ·        ing -  ☰  :  |  ·  ·  ·  ·        ing _  ☰  ;
    ·  ·     ·   ·     · y/j    |     ·  ·     ·   ·     · Y/J

 · ol  · ould␣      · ou  ·  ☰  |  · Ol  · ould       · Ou  ·  ☰
    ·  ·     ·   ·     ·  ·     |     ·  ·     ·   ·     ·  ·

[·  ·  ·  ·         ·  ·  ·  ·] | [·  ·  ·  ·         ·  ·  ·  ·]
    ⇟  ⇞     ☰   ↵     ⇺  ⇻     |     ⤓  ⤒     ☰   ·     ·  ·

[   custom          controls  ] |  9  3  1  5         4  0  2  8
    ⇟  ⇞     ⌫   ☰     ⇍  ⌦     |     7  ·     ⌫   ☰     .  6

'[arstneio],space,up,down,left,right,enter,backspace' = 53.5%

[arst] - [←→] = various brackets, with popularity based on finger strength
⇟ ⇞ ⇺ ⇻ ⤓ ⤒ ⇍ ⌦
⇟ ⇞ again
⇧ - ↑↓ = page up/down, but ␣ - ↑↓ are tmux page up/down (when in term)
␣ - arstneio = WM- or app- specific controls (spammables)
⇧ - arstneio = WM- or app- specific controls (spammables)
⇧ + ␣ = more controls (non-spammables)
  (how about ^A ^R ^C ^D   ^L ^U ^? ^Z in the terminal,
             ^A ^R ^S ^T   ^N ^W ^Q ^F in GUI apps?)
⇧ + ␣ + ⇧ = combo mode
⇧ + ␣ - ? = digits while ␣ is held. '.' is also available, ⌫  (vanilla, pity)
i - n = ing␣ because popular trigram and almost always ends the word (no caps tho)
⇧ + i - n = ing (IDK how good is that idea)
e - n = h (1.2) because 1) inward curl 2) strong finger. ngrams matter a lot:
 n - e = he because 'he' (.32) is 2x more popular than its 'the' subset
 n - a = ha because 'ha' is also .16
 t - n = th because 'th' is .37, 2.3x more popular than its 'the' subset!
 s - n = sh because it's .22
s - ↑ = c (1.9) because 1) mnemonic 2) strong finger 3) consonant-y
s + ↑ = z (0.25) because
  1) mnemonics 2) rare 3) that single-finger roll is gonna be hard on laptops
s - o = co (it's .31! zo is .13)
r - ↓ = l (1.5) because
  1) consonantey, pairs with vowels
  2) single-finger double-press (I hope I won't regret it on laptops!)
  a - r = al (1.9) because 1) a is left-hand 3) it's hard to l
  o - r = ol (1.9) because it's hard to l
  e - r = el (1.3) because it's hard to l
  ? what about il (.6) and some ul (.8)?
r + ↓ = w because 1) mnemonics 2) keeping it on the middle finger

  current w is more than half vi: w, vi: :w.
  it will be less used with ⇻ instead of w and ⇍ instead of ^W (I hope!)
s - t = d because 1) inward rock 2) strong finger 3) consonant-y
 e - t = ed␣ (.25), ⇧ + e - t = ed (not sure how good the space idea is)
 n - t = nd (.13) - first to go away if needed
e - ← = u (.18) - 1) strongest single-finger rock, vowel-y
 o - e = ou
 o - t = ould
e + ← = ,␣
i - → = y (1.0) because 1) mnemonic 2) vowel
  r - i = ly (.06) because both l and y are hard
i + → = j (.06) because rarest letter
i - e = u - pairs with consonants and with o as 'ou'
  o - e = ou (.18)
  o - t = ould, because ou, l and d are hard
r - s = p (1.6) - pairs with vowels (`pr` sounds bad though)
t - s = b (.7, pairs with b,a,e,u,l)
s - r = m (1.0, pairs with vowels, itself, p)
r - a = f (.7)
s - a = v (.7)
r - t = g (1.5, but half of them is `git` + ~10% are `ing`)
a - s = q (.6)
  a - e = qu
t - r = k (.4)
a - t = x (1.0, but lots of them are :x)
t - a = tab
i - o = : / ;
i - e = - / _
e - o = ' / "
o - i = ⎋
?t - i = tion
?r - i = ve (.07)


ma bigram (.30) - this one is bad
pe bigram (.26)
ed bigram (.25)
op bigram (.23)
ng bigram (.23, but must be handled by 'ing')
s-n = ch? (.17)

li bigram (.20)
le bigram (.20)
ol bigram (.20)
al bigram (.20)


␣ ↵ ↑↓t⌫ ⤓⇟⤒⇞ → ← ⌧ ⌦ ↹ ⇺ ⇻ ⇍ ⇏ ⎋
